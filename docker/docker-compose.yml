version: '3.8'

services:

  talktide-db:
    image: postgres:14.1-alpine
    restart: always
    container_name: chat-db
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - chat-db-vol:/var/lib/postgresql/data

  talktide-broker:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq-data-vol:/var/lib/rabbitmq/
        - rabbitmq-log-vol:/var/log/rabbitmq
    networks:
        - chat-net

  talktide-fe:
    build: 
      context: ../frontend
      dockerfile: Dockerfile
      target: stage
    container_name: chat-fe
    image: chat-fe:2.0.0
    volumes:
      - ../frontend/app/:/app/
      # - /app/node_modules
    ports:
      - 4200:4200
    command: /bin/sh -c "while true; do sleep 3600; done"
    networks:
      - chat-net

  talktide-gateway:
    build: 
      context: ../gateway
      dockerfile: Dockerfile
      target: stage
    container_name: chat-gateway
    image: chat-gateway:1.0.0
    ports:
      - 8080:8080
    env_file:
      - .env
    command: /bin/sh -c "while true; do sleep 300; done"
    volumes:
      - ../gateway/app/:/app/
    networks:
      - chat-net
  
  talktide-service-authuser:
    build: 
      context: ../service-authuser
      dockerfile: Dockerfile
      target: stage
    container_name: chat-service-authuser
    env_file:
      - .env
    image: chat-service-authuser:1.0.0
    command: /bin/sh -c "while true; do sleep 300; done"
    volumes:
      - ../service-authuser/app/:/app/
    networks:
      - chat-net

volumes:
  chat-db-vol:
  rabbitmq-log-vol:
  rabbitmq-data-vol:

networks:
  chat-net:
    driver: bridge